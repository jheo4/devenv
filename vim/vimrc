set nocompatible
set modeline
set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp949,korea,iso-2022-kr
set et
set nu
set smartindent
set autoindent
set ruler
set hlsearch
set incsearch
set ignorecase smartcase
set history=999
set undolevels=999
"set mouse=a
set autoread
set nobackup

set showmatch
set showmode
set laststatus=2
set title

set copyindent

set tabstop=2
"set smarttab
set ts=2 sts=2 sw=2
"set cursorline
set background=dark
set ttymouse=xterm2

set rtp+=~/.fzf
"nmap <leader>f :FZF<CR>

set guioptions=egmrLt
set linespace=1
set backspace=2

highlight ColorColumn cterm=underline ctermbg=none
autocmd BufWinEnter * match Error /\%>79v.\+\|\s\+$\|^\s*\n\+\%$/

syntax on
filetype plugin indent on
au FileType cpp        setl ts=2 sw=2 sts=2

au FileType c          setl ts=2 sw=2 sts=2
au FileType h          setl ts=2 sw=2 sts=2
au FileType java       setl ts=2 sw=2 sts=2
au Filetype python     setl ts=2 sw=2 sts=2
au FileType md         setl ts=2 sw=2 sts=2
au FileType make       setl ts=2 sw=2 sts=2 noet

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'


" create ctag/cscope database of Linux kernel: make ARCH=x86_64 cscope tags
" ctags
" ctags * : tag cur directory
" ctags -R . : recursively tag cur directory
" ctrl + ] : move to the func or structure of the cursor & push tag stack
" ctrl + t : move back to the previous cursor & pop tag stack
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-easytags'
set tag=./tags;/
let g:easytags_async = 1
let g:easytags_auto_highlight = 0
let g:easytags_include_members = 1
let g:easytags_dynamic_files = 1


"***** instead of cscope, use grep.
"ex) grep -n <WORD> <dir/*.c>


" tagbar
" +/- : open/close a member list
Plugin 'majutsushi/tagbar'


" Markdown Preview
"Plugin 'JamshedVesuna/vim-markdown-preview'
Plugin 'shime/vim-livedown'


" Nerd Tree
Plugin 'scrooloose/nerdtree'


" C / C++ / Python / Java
" Java Setting
" :ProejctCreate/ProjectList/ProjectOpen/ProjectClose after executing eclimd
" set .classpath & .project
Plugin 'Valloric/YouCompleteMe'
Plugin 'starcraftman/vim-eclim'
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"
let g:ycm_min_num_of_chars_for_completion = 2
let g:ycm_show_diagnostics_ui = 0
let g:syntastic_java_checkers = []
let g:EclimCompletionMethod = 'omnifunc'


" Falke8
Plugin 'nvie/vim-flake8'


" Syntax check
Plugin 'scrooloose/syntastic'


" ultisnips
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
let g:UltiSnipsExpandTrigger="<c-b>"
let g:UltiSnipsJumpForwardTrigger="<c-y>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

call vundle#end()

